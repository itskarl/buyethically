<img class="found display-none animated infinite pulse" id="found" src="/emoticons/041-detective.png">

<center>

<main class="main-body">

  <div class="scan-and-info">

    <!-- Div to show the scanner -->
    <div id="scanner-container"></div>

    <input type="button" id="btn" value="START BARCODE SCANNER!"/>

    <%= form_tag(root_path, method: :get, :id => 'acquire_upc' ) do %>
    <%= text_field_tag :upc_input, nil, placeholder: 'UPC NUMBER' %>
    <%= submit_tag "SEARCH" %>
    <% end %>

    <h1>Pages#about</h1>
    <p>Find me in app/views/pages/about.html.erb</p>

  </div>

  </main>
</center>

<!-- here be the quagga barcode reader magic! -->

<script>
  var _scannerIsRunning = false;

  function startScanner() {
    Quagga.init({
      inputStream: {
        name: "Live",
        type: "LiveStream",
        target: document.querySelector('#scanner-container'),
        constraints: {
          <% if !browser.safari? || browser.safari_webapp_mode? %>
          width: 320,
          height: 300,
          <% end %>
          facingMode: "environment"
        }
      },
      decoder: {
        readers: [
          // "code_128_reader", "ean_reader", "ean_8_reader", "code_39_reader", "code_39_vin_reader", "codabar_reader",
          "upc_reader",
          // "upc_e_reader", "i2of5_reader"
        ],
        debug: {
          showCanvas: true,
          showPatches: true,
          showFoundPatches: true,
          showSkeleton: true,
          showLabels: true,
          showPatchLabels: true,
          showRemainingPatchLabels: true,
          boxFromPatches: {
            showTransformed: true,
            showTransformedBox: true,
            showBB: true
          }
        }
      }
    }, function (err) {
      if (err) {
        console.log(err);
        return
      }

      // console.log("Initialization finished. Ready to start");
      Quagga.start();

      // Set flag to is running
      _scannerIsRunning = true;
    });

    Quagga.onProcessed(function (result) {
      var drawingCtx = Quagga.canvas.ctx.overlay,
        drawingCanvas = Quagga.canvas.dom.overlay;

      if (result) {
        if (result.boxes) {
          drawingCtx.clearRect(0, 0, parseInt(drawingCanvas.getAttribute("width")), parseInt(drawingCanvas.getAttribute("height")));
          result.boxes.filter(function (box) {
            return box !== result.box;
          }).forEach(function (box) {
            Quagga.ImageDebug.drawPath(box, {
              x: 0,
              y: 1
            }, drawingCtx, {
              color: "blue",
              lineWidth: 1
            });
          });
        }

        if (result.box) {
          Quagga.ImageDebug.drawPath(result.box, {
            x: 0,
            y: 1
          }, drawingCtx, {
            color: "#00F",
            lineWidth: 1
          });
        }

        if (result.codeResult && result.codeResult.code) {
          Quagga.ImageDebug.drawPath(result.line, {
            x: 'x',
            y: 'y'
          }, drawingCtx, {
            color: 'red',
            lineWidth: 3
          });
        }
      }
    });

    Quagga.onDetected(function (result) {
      console.log("Barcode detected and processed : [" + result.codeResult.code + "]", result);
      document.getElementById('upc_input').value = result.codeResult.code;
      document.getElementById('this_is_upc').innerHTML = result.codeResult.code;
      document.forms["acquire_upc"].submit();
      document.getElementById('found').classList.remove('display-none');
      Quagga.stop();

    });

  }

  // Start/stop scanner
  document.getElementById("btn").addEventListener("click", function () {
    if (_scannerIsRunning) {
      Quagga.stop();
    } else {
      startScanner();
    }
  }, false);

  document.getElementById("btnTwo").addEventListener("click", function () {
    if (_scannerIsRunning) {
      Quagga.stop();
    } else {
      startScanner();
    }
  }, false);

</script>

<script>
  window.addEventListener("scroll", function () {
    document.getElementById("more").innerHTML = "";
  });
</script>
